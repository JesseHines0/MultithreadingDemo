@* Takes a tuple of (UserDemos, PublicDemos). UserDemos may be null. *@
@model (Helpers.PaginatedList<Demo>, Helpers.PaginatedList<Demo>)

@{
    ViewData["Title"] = "Index";
}

@section Scripts {
    <script>
        $(function(){
            $("a.delete-confirm").on("click", function(e) {
                var name = $(this).data("name")
                if ( !confirm(`Are you sure you want to delete "${name}"?`) ) {
                    e.preventDefault();
                }
            })
        })
    </script>
}

@{
    async Task RenderTable(Helpers.PaginatedList<Demo> demoList, bool editable) {
        <table class="table">
            <thead>
                <tr>
                    <th>Title</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var demo in demoList) {
                    <tr>
                        <td>
                            <div class="d-flex mb-3">
                                <div class="pr-2">
                                    <h5><b><a asp-action="Demo" asp-route-id="@demo.Id">@demo.Title</a></b></h5>
                                </div>
                                <span class="flex-grow-1 px-3">
                                    @foreach (var demoTag in demo.DemoTag) {
                                        <a asp-action="Index" asp-route-filter="@demoTag.TagName">
                                            <span class="badge badge-info">@demoTag.TagName</span>
                                        </a>
                                    }
                                </span>
                                <div class="px-3">
                                    Author: @demo.Author.UserName
                                </div>
                                <div class="px-3">
                                    @demo.CreatedAt.ToString("MMMM dd, yyyy")
                                </div>
                                <div class="px-3">
                                    <a asp-action="Demo" asp-route-id="@demo.Id" title="View"><i class="far fa-eye"></i></a>
                                    @if (editable) {
                                        <a asp-action="Delete" asp-route-id="@demo.Id"
                                           class="delete-confirm ml-1" data-name="@demo.Title" title="Delete"><i class="far fa-trash-alt"></i></a>
                                    }
                                </div>
                            </div>
                            <p>@demo.Description</p>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        return;
    }
}

<h1>Index</h1>

<div class="row mb-3">
    <form class="form-inline float-left" asp-action="Index" method="get">
        <div class="form-actions no-color">
            <input type="text" name="filter" value='@ViewData["Filter"]' class="form-control" placeholder="Search..."/>
            &nbsp;
            <input type="submit" value="Search" class="btn btn-primary" />
            <a asp-action="Index" class="btn btn-secondary">Clear</a>
        </div>
    </form>
    &nbsp;
    <a asp-action="Demo" class="btn btn-success float-right m-1">Make A New Demo</a>
</div>

@if (Model.Item1 != null) { // If we have UserDemos
    <div class="row">
        <h3>Your Demos</h3>

        @{ await RenderTable(Model.Item1, true); }
    
        <a asp-action="Index"
           asp-route-filter='@(ViewData["Filter"])'
           asp-route-userPage='@(Model.Item1.PageIndex - 1)'
           class='btn btn-default @(!Model.Item1.HasPreviousPage ? "disabled" : "")'>
            Previous
        </a>
        <a asp-action="Index"
           asp-route-filter='@(ViewData["Filter"])'
           asp-route-userPage='@(Model.Item1.PageIndex + 1)'
           class='btn btn-default @(!Model.Item1.HasNextPage ? "disabled" : "")'>
            Next
        </a>
    </div>

    <hr class="my-4">
}

<div class="row">
    <h3>Public Demos</h3>

    @{ await RenderTable(Model.Item2, false); }

    <a asp-action="Index"
       asp-route-filter='@(ViewData["Filter"])'
       asp-route-publicPage='@(Model.Item2.PageIndex - 1)'
       class='btn btn-default @(!Model.Item2.HasPreviousPage ? "disabled" : "")'>
        Previous
    </a>
    <a asp-action="Index"
       asp-route-filter='@(ViewData["Filter"])'
       asp-route-publicPage='@(Model.Item2.PageIndex + 1)'
       class='btn btn-default @(!Model.Item2.HasNextPage ? "disabled" : "")'>
        Next
    </a>
</div>
